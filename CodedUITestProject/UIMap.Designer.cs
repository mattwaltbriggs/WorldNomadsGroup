// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.HtmlControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// AssertMethod1 - Use 'AssertMethod1ExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod1()
        {
            #region Variable Declarations
            HtmlEdit uIValueEdit = this.UIIndexMyASPNETApplicaWindow.UIIndexMyASPNETApplicaDocument.UIValueEdit;
            #endregion

            // Verify that the 'MaxLength' property of 'Value' text box equals '2147483647'
            Assert.AreEqual(this.AssertMethod1ExpectedValues.UIValueEditMaxLength, uIValueEdit.MaxLength, "Max value not working");
        }
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            HtmlEdit uIValueEdit = this.UIIndexMyASPNETApplicaWindow.UIIndexMyASPNETApplicaDocument.UIValueEdit;
            HtmlInputButton uISubmitButton = this.UIIndexMyASPNETApplicaWindow.UIIndexMyASPNETApplicaDocument.UISubmitButton;
            HtmlDiv uIOutputareaPane = this.UIIndexMyASPNETApplicaWindow.UIIndexMyASPNETApplicaDocument.UIOutputareaPane;
            HtmlDiv uIIndexCalculatenumeriPane = this.UIIndexMyASPNETApplicaWindow.UIIndexMyASPNETApplicaDocument.UIIndexCalculatenumeriPane;
            WinButton uIClosetheFavouritesCeButton = this.UIIndexMyASPNETApplicaWindow.UIItemWindow.UIItemToolBar.UIClosetheFavouritesCeButton;
            HtmlHyperlink uIHomeHyperlink = this.UIIndexMyASPNETApplicaWindow.UIIndexMyASPNETApplicaDocument.UIHomeHyperlink;
            #endregion

            // Launch '%ProgramFiles(x86)%\Google\Chrome\Application\chrome.exe' with arguments '--no-startup-window'
            ApplicationUnderTest chromeApplication = ApplicationUnderTest.Launch(this.RecordedMethod1Params.ExePath, this.RecordedMethod1Params.AlternateExePath, "--no-startup-window");

            // Type '13' in 'Value' text box
            uIValueEdit.Text = this.RecordedMethod1Params.UIValueEditText;

            // Click 'Submit' button
            Mouse.Click(uISubmitButton, new Point(56, 19));

            // Click 'outputarea' pane
            Mouse.Click(uIOutputareaPane, new Point(288, 73));

            // Click 'outputarea' pane
            Mouse.Click(uIOutputareaPane, new Point(73, 71));

            // Click 'outputarea' pane
            Mouse.Click(uIOutputareaPane, new Point(123, 42));

            // Type 'Control, Shift + i' in 'Index Calculate numeric sequence' pane
            Keyboard.SendKeys(uIIndexCalculatenumeriPane, this.RecordedMethod1Params.UIIndexCalculatenumeriPaneSendKeys, (ModifierKeys.Control | ModifierKeys.Shift));

            // Click 'Close the Favourites Centre' button
            Mouse.Click(uIClosetheFavouritesCeButton, new Point(8, 16));

            // Click 'Home' link
            Mouse.Click(uIHomeHyperlink, new Point(35, 25));
        }
        
        #region Properties
        public virtual AssertMethod1ExpectedValues AssertMethod1ExpectedValues
        {
            get
            {
                if ((this.mAssertMethod1ExpectedValues == null))
                {
                    this.mAssertMethod1ExpectedValues = new AssertMethod1ExpectedValues();
                }
                return this.mAssertMethod1ExpectedValues;
            }
        }
        
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIIndexMyASPNETApplicaWindow UIIndexMyASPNETApplicaWindow
        {
            get
            {
                if ((this.mUIIndexMyASPNETApplicaWindow == null))
                {
                    this.mUIIndexMyASPNETApplicaWindow = new UIIndexMyASPNETApplicaWindow();
                }
                return this.mUIIndexMyASPNETApplicaWindow;
            }
        }
        #endregion
        
        #region Fields
        private AssertMethod1ExpectedValues mAssertMethod1ExpectedValues;
        
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIIndexMyASPNETApplicaWindow mUIIndexMyASPNETApplicaWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class AssertMethod1ExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'MaxLength' property of 'Value' text box equals '2147483647'
        /// </summary>
        public int UIValueEditMaxLength = 2147483647;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Google\Chrome\Application\chrome.exe' with arguments '--no-startup-window'
        /// </summary>
        public string ExePath = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe";
        
        /// <summary>
        /// Launch '%ProgramFiles(x86)%\Google\Chrome\Application\chrome.exe' with arguments '--no-startup-window'
        /// </summary>
        public string AlternateExePath = "%ProgramFiles(x86)%\\Google\\Chrome\\Application\\chrome.exe";
        
        /// <summary>
        /// Type '13' in 'Value' text box
        /// </summary>
        public string UIValueEditText = "13";
        
        /// <summary>
        /// Type 'Control, Shift + i' in 'Index Calculate numeric sequence' pane
        /// </summary>
        public string UIIndexCalculatenumeriPaneSendKeys = "i";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIIndexMyASPNETApplicaWindow : BrowserWindow
    {
        
        public UIIndexMyASPNETApplicaWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "Index - My ASP.NET Application";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("Index - My ASP.NET Application");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIIndexMyASPNETApplicaDocument UIIndexMyASPNETApplicaDocument
        {
            get
            {
                if ((this.mUIIndexMyASPNETApplicaDocument == null))
                {
                    this.mUIIndexMyASPNETApplicaDocument = new UIIndexMyASPNETApplicaDocument(this);
                }
                return this.mUIIndexMyASPNETApplicaDocument;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIIndexMyASPNETApplicaDocument mUIIndexMyASPNETApplicaDocument;
        
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIIndexMyASPNETApplicaDocument : HtmlDocument
    {
        
        public UIIndexMyASPNETApplicaDocument(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[HtmlDocument.PropertyNames.Id] = null;
            this.SearchProperties[HtmlDocument.PropertyNames.RedirectingPage] = "False";
            this.SearchProperties[HtmlDocument.PropertyNames.FrameDocument] = "False";
            this.FilterProperties[HtmlDocument.PropertyNames.Title] = "Index - My ASP.NET Application";
            this.FilterProperties[HtmlDocument.PropertyNames.AbsolutePath] = "/";
            this.FilterProperties[HtmlDocument.PropertyNames.PageUrl] = "http://localhost:12068/";
            this.WindowTitles.Add("Index - My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public HtmlEdit UIValueEdit
        {
            get
            {
                if ((this.mUIValueEdit == null))
                {
                    this.mUIValueEdit = new HtmlEdit(this);
                    #region Search Criteria
                    this.mUIValueEdit.SearchProperties[HtmlEdit.PropertyNames.Id] = "NumberVal";
                    this.mUIValueEdit.SearchProperties[HtmlEdit.PropertyNames.Name] = "NumberVal";
                    this.mUIValueEdit.FilterProperties[HtmlEdit.PropertyNames.LabeledBy] = "Value";
                    this.mUIValueEdit.FilterProperties[HtmlEdit.PropertyNames.Type] = "SINGLELINE";
                    this.mUIValueEdit.FilterProperties[HtmlEdit.PropertyNames.Title] = null;
                    this.mUIValueEdit.FilterProperties[HtmlEdit.PropertyNames.Class] = "form-control text-box single-line";
                    this.mUIValueEdit.FilterProperties[HtmlEdit.PropertyNames.ControlDefinition] = "name=\"NumberVal\" class=\"form-control tex";
                    this.mUIValueEdit.FilterProperties[HtmlEdit.PropertyNames.TagInstance] = "2";
                    this.mUIValueEdit.WindowTitles.Add("Index - My ASP.NET Application");
                    #endregion
                }
                return this.mUIValueEdit;
            }
        }
        
        public HtmlInputButton UISubmitButton
        {
            get
            {
                if ((this.mUISubmitButton == null))
                {
                    this.mUISubmitButton = new HtmlInputButton(this);
                    #region Search Criteria
                    this.mUISubmitButton.SearchProperties[HtmlButton.PropertyNames.Id] = null;
                    this.mUISubmitButton.SearchProperties[HtmlButton.PropertyNames.Name] = null;
                    this.mUISubmitButton.SearchProperties[HtmlButton.PropertyNames.DisplayText] = "Submit";
                    this.mUISubmitButton.SearchProperties[HtmlButton.PropertyNames.Type] = "submit";
                    this.mUISubmitButton.FilterProperties[HtmlButton.PropertyNames.Title] = null;
                    this.mUISubmitButton.FilterProperties[HtmlButton.PropertyNames.Class] = "btn btn-default";
                    this.mUISubmitButton.FilterProperties[HtmlButton.PropertyNames.ControlDefinition] = "class=\"btn btn-default\" type=\"submit\" va";
                    this.mUISubmitButton.FilterProperties[HtmlButton.PropertyNames.TagInstance] = "3";
                    this.mUISubmitButton.WindowTitles.Add("Index - My ASP.NET Application");
                    #endregion
                }
                return this.mUISubmitButton;
            }
        }
        
        public HtmlDiv UIIndexCalculatenumeriPane
        {
            get
            {
                if ((this.mUIIndexCalculatenumeriPane == null))
                {
                    this.mUIIndexCalculatenumeriPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIIndexCalculatenumeriPane.SearchProperties[HtmlDiv.PropertyNames.Id] = null;
                    this.mUIIndexCalculatenumeriPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIIndexCalculatenumeriPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "Index\r\n\r\n \r\n\r\nCalculate numeric sequence";
                    this.mUIIndexCalculatenumeriPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIIndexCalculatenumeriPane.FilterProperties[HtmlDiv.PropertyNames.Class] = "container body-content";
                    this.mUIIndexCalculatenumeriPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "class=\"container body-content\"";
                    this.mUIIndexCalculatenumeriPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "5";
                    this.mUIIndexCalculatenumeriPane.WindowTitles.Add("Index - My ASP.NET Application");
                    #endregion
                }
                return this.mUIIndexCalculatenumeriPane;
            }
        }
        
        public HtmlDiv UIOutputareaPane
        {
            get
            {
                if ((this.mUIOutputareaPane == null))
                {
                    this.mUIOutputareaPane = new HtmlDiv(this);
                    #region Search Criteria
                    this.mUIOutputareaPane.SearchProperties[HtmlDiv.PropertyNames.Id] = "outputarea";
                    this.mUIOutputareaPane.SearchProperties[HtmlDiv.PropertyNames.Name] = null;
                    this.mUIOutputareaPane.FilterProperties[HtmlDiv.PropertyNames.InnerText] = "1 2 3 4 5 6 7 8 9 10 11 12 13 \r\n2 4 6 8 ";
                    this.mUIOutputareaPane.FilterProperties[HtmlDiv.PropertyNames.Title] = null;
                    this.mUIOutputareaPane.FilterProperties[HtmlDiv.PropertyNames.Class] = null;
                    this.mUIOutputareaPane.FilterProperties[HtmlDiv.PropertyNames.ControlDefinition] = "id=\"outputarea\"";
                    this.mUIOutputareaPane.FilterProperties[HtmlDiv.PropertyNames.TagInstance] = "11";
                    this.mUIOutputareaPane.WindowTitles.Add("Index - My ASP.NET Application");
                    #endregion
                }
                return this.mUIOutputareaPane;
            }
        }
        
        public HtmlHyperlink UIHomeHyperlink
        {
            get
            {
                if ((this.mUIHomeHyperlink == null))
                {
                    this.mUIHomeHyperlink = new HtmlHyperlink(this);
                    #region Search Criteria
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Id] = null;
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Name] = null;
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.Target] = null;
                    this.mUIHomeHyperlink.SearchProperties[HtmlHyperlink.PropertyNames.InnerText] = "Home";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.AbsolutePath] = "/";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Title] = null;
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Href] = "http://localhost:12068/";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.Class] = null;
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.ControlDefinition] = "href=\"/\"";
                    this.mUIHomeHyperlink.FilterProperties[HtmlHyperlink.PropertyNames.TagInstance] = "2";
                    this.mUIHomeHyperlink.WindowTitles.Add("Index - My ASP.NET Application");
                    #endregion
                }
                return this.mUIHomeHyperlink;
            }
        }
        #endregion
        
        #region Fields
        private HtmlEdit mUIValueEdit;
        
        private HtmlInputButton mUISubmitButton;
        
        private HtmlDiv mUIIndexCalculatenumeriPane;
        
        private HtmlDiv mUIOutputareaPane;
        
        private HtmlHyperlink mUIHomeHyperlink;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "ToolbarWindow32";
            this.WindowTitles.Add("Index - My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public UIItemToolBar UIItemToolBar
        {
            get
            {
                if ((this.mUIItemToolBar == null))
                {
                    this.mUIItemToolBar = new UIItemToolBar(this);
                }
                return this.mUIItemToolBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemToolBar mUIItemToolBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemToolBar : WinToolBar
    {
        
        public UIItemToolBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Index - My ASP.NET Application");
            #endregion
        }
        
        #region Properties
        public WinButton UIClosetheFavouritesCeButton
        {
            get
            {
                if ((this.mUIClosetheFavouritesCeButton == null))
                {
                    this.mUIClosetheFavouritesCeButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIClosetheFavouritesCeButton.SearchProperties[WinButton.PropertyNames.Name] = "Close the Favourites Centre";
                    this.mUIClosetheFavouritesCeButton.WindowTitles.Add("Index - My ASP.NET Application");
                    #endregion
                }
                return this.mUIClosetheFavouritesCeButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIClosetheFavouritesCeButton;
        #endregion
    }
}
